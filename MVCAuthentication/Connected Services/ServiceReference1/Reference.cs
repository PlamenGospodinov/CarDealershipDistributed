//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCAuthentication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCFProba")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrandDTO", Namespace="http://schemas.datacontract.org/2004/07/ApplicationService.DTOs")]
    [System.SerializableAttribute()]
    public partial class BrandDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCAuthentication.ServiceReference1.Car[] CarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FoundedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LowestModelPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedFrom {
            get {
                return this.AddedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedFromField, value) != true)) {
                    this.AddedFromField = value;
                    this.RaisePropertyChanged("AddedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedOn {
            get {
                return this.AddedOnField;
            }
            set {
                if ((this.AddedOnField.Equals(value) != true)) {
                    this.AddedOnField = value;
                    this.RaisePropertyChanged("AddedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCAuthentication.ServiceReference1.Car[] Cars {
            get {
                return this.CarsField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsField, value) != true)) {
                    this.CarsField = value;
                    this.RaisePropertyChanged("Cars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryOfOrigin {
            get {
                return this.CountryOfOriginField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryOfOriginField, value) != true)) {
                    this.CountryOfOriginField = value;
                    this.RaisePropertyChanged("CountryOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FoundedIn {
            get {
                return this.FoundedInField;
            }
            set {
                if ((this.FoundedInField.Equals(value) != true)) {
                    this.FoundedInField = value;
                    this.RaisePropertyChanged("FoundedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowestModelPrice {
            get {
                return this.LowestModelPriceField;
            }
            set {
                if ((this.LowestModelPriceField.Equals(value) != true)) {
                    this.LowestModelPriceField = value;
                    this.RaisePropertyChanged("LowestModelPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Car : MVCAuthentication.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCAuthentication.ServiceReference1.Brand BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ManifactureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCAuthentication.ServiceReference1.Sale[] SalesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedByField, value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCAuthentication.ServiceReference1.Brand Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionField, value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ManifactureDate {
            get {
                return this.ManifactureDateField;
            }
            set {
                if ((this.ManifactureDateField.Equals(value) != true)) {
                    this.ManifactureDateField = value;
                    this.RaisePropertyChanged("ManifactureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Power {
            get {
                return this.PowerField;
            }
            set {
                if ((this.PowerField.Equals(value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCAuthentication.ServiceReference1.Sale[] Sales {
            get {
                return this.SalesField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesField, value) != true)) {
                    this.SalesField = value;
                    this.RaisePropertyChanged("Sales");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Data.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MVCAuthentication.ServiceReference1.Brand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MVCAuthentication.ServiceReference1.Sale))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MVCAuthentication.ServiceReference1.Car))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Brand : MVCAuthentication.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCAuthentication.ServiceReference1.Car[] CarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FoundedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LowestModelPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedFrom {
            get {
                return this.AddedFromField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedFromField, value) != true)) {
                    this.AddedFromField = value;
                    this.RaisePropertyChanged("AddedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedOn {
            get {
                return this.AddedOnField;
            }
            set {
                if ((this.AddedOnField.Equals(value) != true)) {
                    this.AddedOnField = value;
                    this.RaisePropertyChanged("AddedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCAuthentication.ServiceReference1.Car[] Cars {
            get {
                return this.CarsField;
            }
            set {
                if ((object.ReferenceEquals(this.CarsField, value) != true)) {
                    this.CarsField = value;
                    this.RaisePropertyChanged("Cars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryOfOrigin {
            get {
                return this.CountryOfOriginField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryOfOriginField, value) != true)) {
                    this.CountryOfOriginField = value;
                    this.RaisePropertyChanged("CountryOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FoundedIn {
            get {
                return this.FoundedInField;
            }
            set {
                if ((this.FoundedInField.Equals(value) != true)) {
                    this.FoundedInField = value;
                    this.RaisePropertyChanged("FoundedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowestModelPrice {
            get {
                return this.LowestModelPriceField;
            }
            set {
                if ((this.LowestModelPriceField.Equals(value) != true)) {
                    this.LowestModelPriceField = value;
                    this.RaisePropertyChanged("LowestModelPrice");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sale", Namespace="http://schemas.datacontract.org/2004/07/Data.Entities")]
    [System.SerializableAttribute()]
    public partial class Sale : MVCAuthentication.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCAuthentication.ServiceReference1.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SaleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCAuthentication.ServiceReference1.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarID {
            get {
                return this.CarIDField;
            }
            set {
                if ((this.CarIDField.Equals(value) != true)) {
                    this.CarIDField = value;
                    this.RaisePropertyChanged("CarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientFirstName {
            get {
                return this.ClientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientFirstNameField, value) != true)) {
                    this.ClientFirstNameField = value;
                    this.RaisePropertyChanged("ClientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientLastName {
            get {
                return this.ClientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientLastNameField, value) != true)) {
                    this.ClientLastNameField = value;
                    this.RaisePropertyChanged("ClientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SaleDate {
            get {
                return this.SaleDateField;
            }
            set {
                if ((this.SaleDateField.Equals(value) != true)) {
                    this.SaleDateField = value;
                    this.RaisePropertyChanged("SaleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalePrice {
            get {
                return this.SalePriceField;
            }
            set {
                if ((this.SalePriceField.Equals(value) != true)) {
                    this.SalePriceField = value;
                    this.RaisePropertyChanged("SalePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellerName {
            get {
                return this.SellerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SellerNameField, value) != true)) {
                    this.SellerNameField = value;
                    this.RaisePropertyChanged("SellerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarDTO", Namespace="http://schemas.datacontract.org/2004/07/ApplicationService.DTOs")]
    [System.SerializableAttribute()]
    public partial class CarDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCAuthentication.ServiceReference1.BrandDTO BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ManifactureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedByField, value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCAuthentication.ServiceReference1.BrandDTO Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionField, value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ManifactureDate {
            get {
                return this.ManifactureDateField;
            }
            set {
                if ((this.ManifactureDateField.Equals(value) != true)) {
                    this.ManifactureDateField = value;
                    this.RaisePropertyChanged("ManifactureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Power {
            get {
                return this.PowerField;
            }
            set {
                if ((this.PowerField.Equals(value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaleDTO", Namespace="http://schemas.datacontract.org/2004/07/ApplicationService.DTOs")]
    [System.SerializableAttribute()]
    public partial class SaleDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCAuthentication.ServiceReference1.CarDTO CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SaleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCAuthentication.ServiceReference1.CarDTO Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientFirstName {
            get {
                return this.ClientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientFirstNameField, value) != true)) {
                    this.ClientFirstNameField = value;
                    this.RaisePropertyChanged("ClientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientLastName {
            get {
                return this.ClientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientLastNameField, value) != true)) {
                    this.ClientLastNameField = value;
                    this.RaisePropertyChanged("ClientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SaleDate {
            get {
                return this.SaleDateField;
            }
            set {
                if ((this.SaleDateField.Equals(value) != true)) {
                    this.SaleDateField = value;
                    this.RaisePropertyChanged("SaleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalePrice {
            get {
                return this.SalePriceField;
            }
            set {
                if ((this.SalePriceField.Equals(value) != true)) {
                    this.SalePriceField = value;
                    this.RaisePropertyChanged("SalePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellerName {
            get {
                return this.SellerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SellerNameField, value) != true)) {
                    this.SellerNameField = value;
                    this.RaisePropertyChanged("SellerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetCurrentId", ReplyAction="http://tempuri.org/IService1/SetCurrentIdResponse")]
        void SetCurrentId(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetCurrentId", ReplyAction="http://tempuri.org/IService1/SetCurrentIdResponse")]
        System.Threading.Tasks.Task SetCurrentIdAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCurrentId", ReplyAction="http://tempuri.org/IService1/GetCurrentIdResponse")]
        int GetCurrentId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCurrentId", ReplyAction="http://tempuri.org/IService1/GetCurrentIdResponse")]
        System.Threading.Tasks.Task<int> GetCurrentIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MVCAuthentication.ServiceReference1.CompositeType GetDataUsingDataContract(MVCAuthentication.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(MVCAuthentication.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBrands", ReplyAction="http://tempuri.org/IService1/GetBrandsResponse")]
        MVCAuthentication.ServiceReference1.BrandDTO[] GetBrands(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBrands", ReplyAction="http://tempuri.org/IService1/GetBrandsResponse")]
        System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.BrandDTO[]> GetBrandsAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostBrand", ReplyAction="http://tempuri.org/IService1/PostBrandResponse")]
        string PostBrand(MVCAuthentication.ServiceReference1.BrandDTO brandDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostBrand", ReplyAction="http://tempuri.org/IService1/PostBrandResponse")]
        System.Threading.Tasks.Task<string> PostBrandAsync(MVCAuthentication.ServiceReference1.BrandDTO brandDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutBrand", ReplyAction="http://tempuri.org/IService1/PutBrandResponse")]
        string PutBrand(MVCAuthentication.ServiceReference1.BrandDTO brandDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutBrand", ReplyAction="http://tempuri.org/IService1/PutBrandResponse")]
        System.Threading.Tasks.Task<string> PutBrandAsync(MVCAuthentication.ServiceReference1.BrandDTO brandDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBrandByID", ReplyAction="http://tempuri.org/IService1/GetBrandByIDResponse")]
        MVCAuthentication.ServiceReference1.BrandDTO GetBrandByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBrandByID", ReplyAction="http://tempuri.org/IService1/GetBrandByIDResponse")]
        System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.BrandDTO> GetBrandByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBrand", ReplyAction="http://tempuri.org/IService1/DeleteBrandResponse")]
        string DeleteBrand(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBrand", ReplyAction="http://tempuri.org/IService1/DeleteBrandResponse")]
        System.Threading.Tasks.Task<string> DeleteBrandAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCars", ReplyAction="http://tempuri.org/IService1/GetCarsResponse")]
        MVCAuthentication.ServiceReference1.CarDTO[] GetCars(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCars", ReplyAction="http://tempuri.org/IService1/GetCarsResponse")]
        System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.CarDTO[]> GetCarsAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCarByID", ReplyAction="http://tempuri.org/IService1/GetCarByIDResponse")]
        MVCAuthentication.ServiceReference1.CarDTO GetCarByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCarByID", ReplyAction="http://tempuri.org/IService1/GetCarByIDResponse")]
        System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.CarDTO> GetCarByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostCar", ReplyAction="http://tempuri.org/IService1/PostCarResponse")]
        string PostCar(MVCAuthentication.ServiceReference1.CarDTO carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostCar", ReplyAction="http://tempuri.org/IService1/PostCarResponse")]
        System.Threading.Tasks.Task<string> PostCarAsync(MVCAuthentication.ServiceReference1.CarDTO carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutCar", ReplyAction="http://tempuri.org/IService1/PutCarResponse")]
        string PutCar(MVCAuthentication.ServiceReference1.CarDTO carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutCar", ReplyAction="http://tempuri.org/IService1/PutCarResponse")]
        System.Threading.Tasks.Task<string> PutCarAsync(MVCAuthentication.ServiceReference1.CarDTO carDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCar", ReplyAction="http://tempuri.org/IService1/DeleteCarResponse")]
        string DeleteCar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCar", ReplyAction="http://tempuri.org/IService1/DeleteCarResponse")]
        System.Threading.Tasks.Task<string> DeleteCarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSales", ReplyAction="http://tempuri.org/IService1/GetSalesResponse")]
        MVCAuthentication.ServiceReference1.SaleDTO[] GetSales(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSales", ReplyAction="http://tempuri.org/IService1/GetSalesResponse")]
        System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.SaleDTO[]> GetSalesAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSaleByID", ReplyAction="http://tempuri.org/IService1/GetSaleByIDResponse")]
        MVCAuthentication.ServiceReference1.SaleDTO GetSaleByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSaleByID", ReplyAction="http://tempuri.org/IService1/GetSaleByIDResponse")]
        System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.SaleDTO> GetSaleByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSale", ReplyAction="http://tempuri.org/IService1/PostSaleResponse")]
        string PostSale(MVCAuthentication.ServiceReference1.SaleDTO saleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSale", ReplyAction="http://tempuri.org/IService1/PostSaleResponse")]
        System.Threading.Tasks.Task<string> PostSaleAsync(MVCAuthentication.ServiceReference1.SaleDTO saleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutSale", ReplyAction="http://tempuri.org/IService1/PutSaleResponse")]
        string PutSale(MVCAuthentication.ServiceReference1.SaleDTO saleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutSale", ReplyAction="http://tempuri.org/IService1/PutSaleResponse")]
        System.Threading.Tasks.Task<string> PutSaleAsync(MVCAuthentication.ServiceReference1.SaleDTO saleDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSale", ReplyAction="http://tempuri.org/IService1/DeleteSaleResponse")]
        string DeleteSale(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSale", ReplyAction="http://tempuri.org/IService1/DeleteSaleResponse")]
        System.Threading.Tasks.Task<string> DeleteSaleAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVCAuthentication.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVCAuthentication.ServiceReference1.IService1>, MVCAuthentication.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetCurrentId(int value) {
            base.Channel.SetCurrentId(value);
        }
        
        public System.Threading.Tasks.Task SetCurrentIdAsync(int value) {
            return base.Channel.SetCurrentIdAsync(value);
        }
        
        public int GetCurrentId() {
            return base.Channel.GetCurrentId();
        }
        
        public System.Threading.Tasks.Task<int> GetCurrentIdAsync() {
            return base.Channel.GetCurrentIdAsync();
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MVCAuthentication.ServiceReference1.CompositeType GetDataUsingDataContract(MVCAuthentication.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(MVCAuthentication.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public MVCAuthentication.ServiceReference1.BrandDTO[] GetBrands(string filter) {
            return base.Channel.GetBrands(filter);
        }
        
        public System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.BrandDTO[]> GetBrandsAsync(string filter) {
            return base.Channel.GetBrandsAsync(filter);
        }
        
        public string PostBrand(MVCAuthentication.ServiceReference1.BrandDTO brandDto) {
            return base.Channel.PostBrand(brandDto);
        }
        
        public System.Threading.Tasks.Task<string> PostBrandAsync(MVCAuthentication.ServiceReference1.BrandDTO brandDto) {
            return base.Channel.PostBrandAsync(brandDto);
        }
        
        public string PutBrand(MVCAuthentication.ServiceReference1.BrandDTO brandDto) {
            return base.Channel.PutBrand(brandDto);
        }
        
        public System.Threading.Tasks.Task<string> PutBrandAsync(MVCAuthentication.ServiceReference1.BrandDTO brandDto) {
            return base.Channel.PutBrandAsync(brandDto);
        }
        
        public MVCAuthentication.ServiceReference1.BrandDTO GetBrandByID(int id) {
            return base.Channel.GetBrandByID(id);
        }
        
        public System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.BrandDTO> GetBrandByIDAsync(int id) {
            return base.Channel.GetBrandByIDAsync(id);
        }
        
        public string DeleteBrand(int id) {
            return base.Channel.DeleteBrand(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteBrandAsync(int id) {
            return base.Channel.DeleteBrandAsync(id);
        }
        
        public MVCAuthentication.ServiceReference1.CarDTO[] GetCars(string filter) {
            return base.Channel.GetCars(filter);
        }
        
        public System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.CarDTO[]> GetCarsAsync(string filter) {
            return base.Channel.GetCarsAsync(filter);
        }
        
        public MVCAuthentication.ServiceReference1.CarDTO GetCarByID(int id) {
            return base.Channel.GetCarByID(id);
        }
        
        public System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.CarDTO> GetCarByIDAsync(int id) {
            return base.Channel.GetCarByIDAsync(id);
        }
        
        public string PostCar(MVCAuthentication.ServiceReference1.CarDTO carDto) {
            return base.Channel.PostCar(carDto);
        }
        
        public System.Threading.Tasks.Task<string> PostCarAsync(MVCAuthentication.ServiceReference1.CarDTO carDto) {
            return base.Channel.PostCarAsync(carDto);
        }
        
        public string PutCar(MVCAuthentication.ServiceReference1.CarDTO carDto) {
            return base.Channel.PutCar(carDto);
        }
        
        public System.Threading.Tasks.Task<string> PutCarAsync(MVCAuthentication.ServiceReference1.CarDTO carDto) {
            return base.Channel.PutCarAsync(carDto);
        }
        
        public string DeleteCar(int id) {
            return base.Channel.DeleteCar(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCarAsync(int id) {
            return base.Channel.DeleteCarAsync(id);
        }
        
        public MVCAuthentication.ServiceReference1.SaleDTO[] GetSales(string filter) {
            return base.Channel.GetSales(filter);
        }
        
        public System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.SaleDTO[]> GetSalesAsync(string filter) {
            return base.Channel.GetSalesAsync(filter);
        }
        
        public MVCAuthentication.ServiceReference1.SaleDTO GetSaleByID(int id) {
            return base.Channel.GetSaleByID(id);
        }
        
        public System.Threading.Tasks.Task<MVCAuthentication.ServiceReference1.SaleDTO> GetSaleByIDAsync(int id) {
            return base.Channel.GetSaleByIDAsync(id);
        }
        
        public string PostSale(MVCAuthentication.ServiceReference1.SaleDTO saleDto) {
            return base.Channel.PostSale(saleDto);
        }
        
        public System.Threading.Tasks.Task<string> PostSaleAsync(MVCAuthentication.ServiceReference1.SaleDTO saleDto) {
            return base.Channel.PostSaleAsync(saleDto);
        }
        
        public string PutSale(MVCAuthentication.ServiceReference1.SaleDTO saleDto) {
            return base.Channel.PutSale(saleDto);
        }
        
        public System.Threading.Tasks.Task<string> PutSaleAsync(MVCAuthentication.ServiceReference1.SaleDTO saleDto) {
            return base.Channel.PutSaleAsync(saleDto);
        }
        
        public string DeleteSale(int id) {
            return base.Channel.DeleteSale(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSaleAsync(int id) {
            return base.Channel.DeleteSaleAsync(id);
        }
    }
}
